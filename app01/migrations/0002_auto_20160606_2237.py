# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-06 14:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app01', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.CharField(choices=[('online', '网络班'), ('offline_weekend', '面授班(周末)'), ('offline_fulltime', '面授班(脱产)')], max_length=32)),
                ('semester', models.IntegerField()),
                ('start_date', models.DateField()),
                ('graduate_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('status', models.IntegerField(choices=[(1, '近期无报名计划'), (2, '2个月内报名'), (3, '1个月内报名'), (4, '2周内报名'), (5, '1周内报名'), (6, '2天内报名'), (7, '已报名')])),
                ('date', models.DateField(auto_now_add=True)),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('price', models.IntegerField(default=0)),
                ('online_price', models.IntegerField(default=0)),
                ('brief', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_num', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.ClassList')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qq', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(blank=True, max_length=32)),
                ('phone', models.BigIntegerField(blank=True, null=True)),
                ('stu_id', models.CharField(blank=True, max_length=128, null=True)),
                ('source', models.CharField(choices=[('qq', 'qq群'), ('referral', '内部转介绍'), ('51cto', '51cto'), ('agent', '招生代理'), ('others', '其他')], default='qq', max_length=32)),
                ('class_type', models.CharField(choices=[('online', '网络班'), ('offline_weekend', '面授班(周末)'), ('offline_fulltime', '面授班(脱产)')], max_length=64)),
                ('customer_note', models.TextField()),
                ('status', models.CharField(choices=[('signed', '已报名'), ('unregistered', '未报名'), ('graduated', '已毕业')], max_length=64)),
                ('date', models.DateField(auto_now_add=True)),
                ('class_list', models.ManyToManyField(blank=True, to='app01.ClassList')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.UserProfile')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Course')),
                ('referral_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_referral', to='app01.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('addr', models.CharField(max_length=128)),
                ('staff', models.ManyToManyField(blank=True, to='app01.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.CharField(choices=[('checked', '已签到'), ('late', '迟到'), ('noshow', '缺勤'), ('leave_early', '早退')], max_length=64)),
                ('score', models.IntegerField(choices=[(100, 'A+'), (90, 'A'), (85, 'B+'), (80, 'B'), (70, 'B-'), (60, 'C+'), (50, 'C'), (40, 'C-'), (0, 'D'), (-1, 'N/A'), (-100, 'COPY'), (-1000, 'FAIL')], default=-1)),
                ('date', models.DateField(auto_now_add=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('course_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.CourseRecord')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Customer')),
            ],
        ),
        migrations.AddField(
            model_name='consultrecord',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Customer'),
        ),
        migrations.AddField(
            model_name='classlist',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Course'),
        ),
        migrations.AddField(
            model_name='classlist',
            name='teachers',
            field=models.ManyToManyField(to='app01.UserProfile'),
        ),
        migrations.AlterUniqueTogether(
            name='studyrecord',
            unique_together=set([('course_record', 'student')]),
        ),
        migrations.AlterUniqueTogether(
            name='courserecord',
            unique_together=set([('course', 'day_num')]),
        ),
    ]
